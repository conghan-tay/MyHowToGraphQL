// Code generated by sqlc. DO NOT EDIT.
// source: user.sql

package db

import (
	"context"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (
  username, password
) VALUES (
  $1, $2
)
RETURNING id, username
`

type CreateUserParams struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type CreateUserRow struct {
	ID       int64  `json:"id"`
	Username string `json:"username"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (CreateUserRow, error) {
	row := q.queryRow(ctx, q.createUserStmt, createUser, arg.Username, arg.Password)
	var i CreateUserRow
	err := row.Scan(&i.ID, &i.Username)
	return i, err
}

const getUser = `-- name: GetUser :one
SELECT id, username FROM users
WHERE username = $1 LIMIT 1
`

type GetUserRow struct {
	ID       int64  `json:"id"`
	Username string `json:"username"`
}

func (q *Queries) GetUser(ctx context.Context, username string) (GetUserRow, error) {
	row := q.queryRow(ctx, q.getUserStmt, getUser, username)
	var i GetUserRow
	err := row.Scan(&i.ID, &i.Username)
	return i, err
}
